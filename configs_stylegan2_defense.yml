  Introduction : 'ILO on data with image norm'
  optim : "ours"    #optim method
  cost_fn : "sim_cmpr0"   #the type of loss function 
  # cost_fn : "l2"   #the type of loss function 

  indices : "def"      #decide which part of gradients to be involved in the final gradients match loss.
  weights : 'equal'    #weight of every graident scalar's matching loss
  init : 'randn'     #how we initial the original latent code.
  model : "ResNet18"   #FL model
  restarts : 4

  num_images : 1   #How many images we want to reconstruct at a batch
  num_exp : 30
  target_id : 0
  lr : 0.03
  total_variation : 0.0001     #the coefficient of total variation
  # total_variation : 0
  bn_stat : 0       #choose if we use bn statistic to regularizer
  image_norm : 0.000001    #the coefficient of norm regularizer
  # image_norm : 0    
  group_lazy : 0    #choose if we use group lazy regularization
  
  #For GIAS
  max_iterations : 1000 #1000    #Maximum number of iterations for reconstruction.
  gias_iterations : 8000 #5000  #Maximum number of gias iterations for reconstruction.
  gias_lr : 0.001

  generative_model : 'stylegan2_io'
  gen_dataset : 'FFHQ64'
  # gen_dataset : 'I512'
  dataset : "FFHQ64"
  data_path : "./dataset/FFHQ-128"


  #For output data
  # exp_name : 'ex2_ILOPlus_70imgs'   #Same latent space search
  exp_name : 'ex1_30imgs_noise_gias'   #Same latent space search

  # output_dir : 'outputs/ILO/ffhq'
  output_dir : 'defense_outputs/additive_noise/ffhq/GIAS'

  # output_dir : 'ood_outputs/GIAS/ffhq'

  #params for inter_optim
  inter_optim : false
  gias : true
  ggl : false
  # steps : [500, 1500, 1500, 2500]
  mae : false
  #For stylegan2
  steps : [1000, 1000, 1000, 1000, 1000, 1000, 1000, 1000]      #8000 in total
  # steps : [1, 1, 1, 1, 1, 1, 1, 1]      #8000 in total

  # steps : [1000, 1000, 1000, 1000, 1000]      #5000 in total

  progressive_re : false
  # steps : [ 1, 1, 1, 1, 1, 1, 1, 1]

  # steps : [1, 1, 1, 1, 1]
  lr_io: [0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1]
  start_layer: 0
  end_layer: 8

  # For projection
  project : true
  do_project_gen_out: true
  do_project_noises: true
  do_project_latent: true
  # max_radius_gen_out: [-1, -1, -1, -1, -1, 2000, 2000, 2000]
  # max_radius_gen_out: [1000, 1000, 6000, 8000, 8000, 8000, 8000, 8000]
  # max_radius_noises: [1000, 1000, 6000, 8000, 8000, 8000, 8000, 8000]
  # max_radius_latent: [100, 1000, 6000, 8000, 8000, 8000, 8000, 8000]
  # max_radius_gen_out: [1000, 1000, 6000, 6000, 8000, 8000, 8000, 8000]
  # max_radius_noises: [1000, 1000, 6000, 6000, 8000, 8000, 8000, 8000]
  # max_radius_latent: [100, 1000, 6000, 6000, 8000, 8000, 8000, 8000]
  # max_radius_gen_out: [1000, 2500, 3500, 4500, 5500, 6500, 8000, 8000]
  # max_radius_noises: [1000, 2500, 3500, 4500, 5500, 6500, 8000, 8000]
  # max_radius_latent: [1000, 2500, 3500, 4500, 5500, 6500, 8000, 8000]
  max_radius_gen_out: [1000, 2000, 3000, 4000, 5000, 6000, 8000, 8000]
  max_radius_noises: [1000, 2000, 3000, 4000, 5000, 6000, 8000, 8000]
  max_radius_latent: [1000, 2000, 3000, 4000, 5000, 6000, 8000, 8000]
  #input & output 
  # input_data: True
  # input_files:
  #   - 'io_files/original/john_cleese_no_nose.png'
  # output_files:
  #   - 'io_files/results/john_cleese.png'

  # The pre-trained StyleGAN checkpoint
  ckpt: './inversefed/genmodels/stylegan2_io/stylegan2-ffhq-config-f.pt'
  # ckpt: '/home/itml_fh/gradient-inversion-generative-image-prior/inversefed/genmodels/stylegan2_io/imagenet.pt'


  #LR pace for training
  lr_same_pace: false 

  #Defense parameter
  defense_method : noise
  defense_setting : 
    noise : 0.1
    clipping : None
    compression : 90
    representation : None

  #Test option
  test_pgd : false
  test_cost_fn : false

  #For CMA-ES
  KLD : 0  
  cma_budget : 800
  # cma_budget : 1
  num_sample : 50  #sample times

  #cmd instruction
  # python rec_mult.py --generate --defense
  